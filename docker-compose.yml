version: '3'
services:
  db:
    image: mysql:latest
    networks:
      - wowzaaa
    restart: always
    entrypoint: ['docker-entrypoint.sh', '--default-authentication-plugin=mysql_native_password']
    volumes:
      - cv30DB:/var/lib/mysql
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USER}"
    ports:
      - "3306:3306"
  # proxy:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #   networks:
  #     - wowzaaa
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - app
  app:
    build:
      context: ./
      dockerfile: app.dockerfile
    environment: 
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_DATABASE: "${DB_DATABASE}"
      DB_USER: "${DB_USER}"
      DB_HOST: db
      APP_HOST: "${APP_HOST}"
      COOKIE_SECRET: "${COOKIE_SECRET}"
      TOKEN_HEADER: "${TOKEN_HEADER}"
      REFRESH_TOKEN_HEADER: "${REFRESH_TOKEN_HEADER}"
      NODE_ENV: development
      SMTP_EMAIL: "${SMTP_EMAIL}"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_PORT: "${SMTP_PORT}"
      SMTP_USERNAME: "${SMTP_USERNAME}"
      SMTP_PASSWORD: "${SMTP_PASSWORD}"
      AWS_BUCKET: "${AWS_BUCKET}"
      AWS_ACCESS_KEY: "${AWS_ACCESS_KEY}"
      AWS_SECRET_KEY: "${AWS_SECRET_KEY}"
    ports:
      - "80:4000"
    restart: always
    networks:
      - wowzaaa
    volumes:
      - .:/usr/src/app
      - cv30NpmModules:/usr/src/app/node_modules
    depends_on:
      - db
    command: nodemon -L --watch ./ -e js ./app/server.js
networks:
  wowzaaa:
volumes:
  cv30DB:
  cv30NpmModules: